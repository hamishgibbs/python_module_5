return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.5) +
scale_fill_manual(values = c('lightgrey', '#2F95BF'))
theme_void()
return(p)
}
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.5) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
theme_void()
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
theme_void()
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '')
theme_void()
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '') +
theme_void()
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '') +
theme_void() +
ggtitle(target)
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '') +
theme_void() +
ggtitle(target) +
theme(plot.title.position = 'center')
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '') +
theme_void() +
ggtitle(target) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
rand_poly <- neighbours %>% filter(msoa11cd == 'E02006019')
rand_poly
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
})
source('./get_neighbour.R')
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/output/msoa_neighbors.csv')
}else{
.args <- commandArgs(trailingOnly = T)
}
msoa <- st_read(.args[1]) %>%
select(msoa11cd, msoa11nm)
codes <- msoa %>% pull(msoa11cd) %>% as.character()
t1 <- Sys.time()
neighbors <- lapply(c(codes[as.integer(runif(10, min = 1, max = msoa %>% pull(1) %>% length()))], c('E02006019', 'E02006021')), get_neighbour, msoa_data = msoa)
t2 <- Sys.time()
t2-t1
neighbors <- do.call(rbind, neighbors)
write_csv(neighbors, tail(.args, 1))
suppressPackageStartupMessages({
require(tidyverse)
require(ggplot2)
})
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/output/msoa_neighbors.csv')
}else{
.args <- commandArgs(trailingOnly = T)
}
msoa <- st_read(.args[1]) %>%
select(msoa11cd, msoa11nm)
neighbours <- read_csv(.args[2])
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '') +
theme_void() +
ggtitle(target) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
rand_poly <- neighbours %>% filter(msoa11cd == 'E02006019')
rand_poly <- neighbours %>% filter(msoa11cd == 'E02006019')
rand_poly
island_poly <- neighbours %>% filter(msoa11cd == 'E02006019')
donut_poly <- neighbours %>% filter(msoa11cd == 'E02006019')
donut_poly
island_poly <- neighbours %>% filter(msoa11cd == 'E02006019') %>% pull(target_code)
donut_poly <- neighbours %>% filter(msoa11cd == 'E02006019') %>% pull(target_code)
island_poly <- neighbours %>% filter(msoa11cd == 'E02006019') %>% pull(target_code)
donut_poly <- neighbours %>% filter(msoa11cd == 'E02006021') %>% pull(target_code)
donut_poly
neighbours %>% filter(msoa11cd == 'E02006021')
island_poly <- neighbours %>% filter(target_code == 'E02006019')
island_poly
donut_poly <- neighbours %>% filter(target_code == 'E02006021')
donut_poly
n <- neighbours %>% filter(target_code == 'E02006019')
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
n <- neighbours %>% filter(target_code == 'E02006021')
plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/output/msoa_neighbors.csv',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/validation/v1.png')
}else{
.args <- commandArgs(trailingOnly = T)
}
ggsave(.args[1], p)
ggsave(tail(.args, 1), p)
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(tail(.args, 1), p)
ggsave(gsub('v1.png', 'v2.png', tail(.args, 1)), p)
suppressPackageStartupMessages({
require(tidyverse)
require(ggplot2)
})
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/output/msoa_neighbors.csv',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/validation/v1.png')
}else{
.args <- commandArgs(trailingOnly = T)
}
msoa <- st_read(.args[1]) %>%
select(msoa11cd, msoa11nm)
neighbours <- read_csv(.args[2])
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '') +
theme_void() +
ggtitle(target) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(tail(.args, 1), p)
n <- neighbours %>% filter(target_code == 'E02006019')
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(gsub('v1.png', 'v2.png', tail(.args, 1)), p)
n <- neighbours %>% filter(target_code == 'E02006021')
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(gsub('v1.png', 'v3.png', tail(.args, 1)), p)
suppressPackageStartupMessages({
require(tidyverse)
require(ggplot2)
})
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/output/msoa_neighbors.csv',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/validation/v1.png')
}else{
.args <- commandArgs(trailingOnly = T)
}
msoa <- st_read(.args[1]) %>%
select(msoa11cd, msoa11nm)
neighbours <- read_csv(.args[2])
plot_neighbours <- function(msoa_data, neighbours, target){
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '') +
theme_void() +
ggtitle(target) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(tail(.args, 1), p)
n <- neighbours %>% filter(target_code == 'E02006019')
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(gsub('v1.png', 'v2.png', tail(.args, 1)), p)
n <- neighbours %>% filter(target_code == 'E02006021')
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(gsub('v1.png', 'v3.png', tail(.args, 1)), p)
rm(list = ls())
suppressPackageStartupMessages({
require(tidyverse)
require(ggplot2)
})
source('./get_neighbour.R')
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/output/msoa_neighbors.csv',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/validation/v1.png')
}else{
.args <- commandArgs(trailingOnly = T)
}
msoa <- st_read(.args[1]) %>%
select(msoa11cd, msoa11nm)
neighbours <- read_csv(.args[2])
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(tail(.args, 1), p)
n <- neighbours %>% filter(target_code == 'E02006019')
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(gsub('v1.png', 'v2.png', tail(.args, 1)), p)
n <- neighbours %>% filter(target_code == 'E02006021')
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(gsub('v1.png', 'v3.png', tail(.args, 1)), p)
suppressPackageStartupMessages({
require(tidyverse)
require(ggplot2)
})
source('./get_neighbour.R')
source('./get_neighbour.R')
source('./plot_neighbours.R')
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/output/msoa_neighbors.csv',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/validation/v1.png')
}else{
.args <- commandArgs(trailingOnly = T)
}
msoa <- st_read(.args[1]) %>%
select(msoa11cd, msoa11nm)
neighbours <- read_csv(.args[2])
rand_poly <- neighbours %>% slice(as.integer(runif(1, 1, neighbours %>% pull(1) %>% length()))) %>% pull(target_code)
n <- neighbours %>% filter(target_code == rand_poly)
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(tail(.args, 1), p)
n <- neighbours %>% filter(target_code == 'E02006019')
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(gsub('v1.png', 'v2.png', tail(.args, 1)), p)
n <- neighbours %>% filter(target_code == 'E02006021')
p <- plot_neighbours(msoa, n$msoa11cd, unique(n$target_code))
ggsave(gsub('v1.png', 'v3.png', tail(.args, 1)), p)
class(msoa)
identical(class(msoa), c('sf', 'data.frame')
if(length(target) > 1){stop('Only accepts one target code.')}
msoa_data <- msoa_data %>%
filter(msoa11cd %in% c(neighbours, target)) %>%
mutate(type = ifelse(msoa11cd == target, 'target', 'neighbours'))
p <- msoa_data %>%
ggplot() +
geom_sf(aes(fill = type), size = 0.2) +
scale_fill_manual(values = c('lightgrey', '#2F95BF')) +
labs(fill = '') +
theme_void() +
ggtitle(target) +
theme(plot.title = element_text(hjust = 0.5))
return(p)
}
identical(class(msoa), c('sf', 'data.frame'))
source('./plot_neighbours.R')
st_as_sfc(st_bbox(c(1, 2, 3, 4)))
st_as_sfc(c(1, 2, 3, 4))
rand_poly
msoa
msoa %>% slice(1)
st_point(c(1, 2))
st_as_sf('a', geometry = st_point(c(1, 2)))
st_as_sf(c('a'), geometry = st_point(c(1, 2)))
st_as_sf(data = c('a'), geometry = st_point(c(1, 2)))
st_as_sf(data = data.frame(a = 'a'), geometry = st_point(c(1, 2)))
st_as_sf(daxta = data.frame(a = 'a'), geometry = st_point(c(1, 2)))
st_as_sf(x = data.frame(a = 'a'), geometry = st_point(c(1, 2)))
st_as_sf(x = data.frame(a = 'a', geometry = st_point(c(1, 2))))
st_point(c(1,1)) %>% st_cast("MULTIPOINT")
st_point(c(1,1))
df2 = data.frame(st_coordinates(df1[,1]))
sfc = st_sfc(st_point(c(3,4)), st_point(c(10,11)))
sfc
sfc = st_as_sf(st_sfc(st_point(c(3,4)), st_point(c(10,11))))
sfc
class(sfc)
sfc = st_as_sf(st_sfc(st_point(c(1,1))))
sfc
testthat::test_that('plot_neighbours works as expected', {
sfobj = st_as_sf(st_sfc(st_point(c(1,1))))
testthat::expect_error(c('a'), c('a', 'b'), c('a'))
testthat::expect_error(sfobj, c('a', 'b'), c('a', 'b'))
})
source('./plot_neighbours.R')
testthat::test_that('plot_neighbours works as expected', {
sfobj = st_as_sf(st_sfc(st_point(c(1,1))))
testthat::expect_error(c('a'), c('a', 'b'), c('a'))
testthat::expect_error(sfobj, c('a', 'b'), c('a', 'b'))
})
source('./plot_neighbours.R')
source('./plot_neighbours.R')
testthat::test_that('plot_neighbours works as expected', {
sfobj = st_as_sf(st_sfc(st_point(c(1,1))))
testthat::expect_error(plot_neighbours(c('a'), c('a', 'b'), c('a')))
testthat::expect_error(plot_neighbours(sfobj, c('a', 'b'), c('a', 'b')))
})
source('./plot_neighbours.R')
source('./get_neighbour.R')
sfobj
sfobj = st_as_sf(st_sfc(st_point(c(1,1))))
sfobj
get_neighbour <- function(msoa_data, msoa_code){
if(!identical(class(msoa_data), c('sf', 'data.frame'))){stop('msoa_data must be class sf, data.frame.')}
if(length(msoa_code) > 1){stop('get_neighbour only accepts one msoa_code code.')}
target_polygon <- msoa_data %>% filter(msoa11cd == msoa_code)
msoa_data <- msoa_data %>%
slice(st_intersects(target_polygon, msoa_data)[[1]]) %>%
st_set_geometry(NULL) %>%
mutate(target_code = msoa_code) %>%
filter(target_code != msoa11cd)
return(msoa_data)
}
source('./get_neighbour.R')
get_neighbour(c('a'), c('a', 'b'), c('a'))
get_neighbour(c('a'), c('a'))
get_neighbour(sfobj, c('a', 'b'))
source('./get_neighbour.R')
testthat::test_that('get_neighbour works as expected', {
sfobj = st_as_sf(st_sfc(st_point(c(1,1))))
testthat::expect_error(get_neighbour(c('a'), c('a')))
testthat::expect_error(get_neighbour(sfobj, c('a', 'b')))
})
read_csv('./output/msoa_neighbors.csv')
read_csv('./output/msoa_neighbors.csv')
outpus <- read_csv('./output/msoa_neighbors.csv')
output <- read_csv('./output/msoa_neighbors.csv')
output
class(output)
'data.frame' %in% class(output)
testthat::expect_true('data.frame' %in% class(output))
testthat::expect_identical(colnames(output), c('msoa11cd', 'msoa11nm', 'target_code'))
output %>%
select_if(function(x) any(is.na(x)))
output %>%
select_if(function(x) any(is.na(x)))
output %>% select_if(function(x) any(is.na(x))) %>% pull(1)
output %>% select_if(function(x) any(is.na(x))) %>% length()
testthat::expect_equal(output %>% select_if(function(x) any(is.na(x))) %>% length(), 0)
testthat::test_that('get_neighbour works as expected', {
output <- read_csv('./output/msoa_neighbors.csv')
testthat::expect_true('data.frame' %in% class(output))
testthat::expect_identical(colnames(output), c('msoa11cd', 'msoa11nm', 'target_code'))
testthat::expect_equal(output %>% select_if(function(x) any(is.na(x))) %>% length(), 0)
})
cols(output)
spec_csv(output)
cols(output)
lapply(output, class)
lapply(output, class) %>% unlist()
lapply(output, class) %>% unlist() %>% unique()
testthat::test_that('get_neighbour works as expected', {
output <- read_csv('./output/msoa_neighbors.csv')
testthat::expect_true('data.frame' %in% class(output))
testthat::expect_identical(colnames(output), c('msoa11cd', 'msoa11nm', 'target_code'))
testthat::expect_equal(output %>% select_if(function(x) any(is.na(x))) %>% length(), 0)
testthat::expect_identical(lapply(output, class) %>% unlist() %>% unique(), 'character')
})
testthat::test_dir('./tests')
testthat::test_dir('./tests')
readr::read_csv('../output/msoa_neighbors.csv')
install.packages('pbapply')
require(pbapply)
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
require(pbapply)
})
source('./get_neighbour.R')
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbors/output/msoa_neighbors.csv')
}else{
.args <- commandArgs(trailingOnly = T)
}
msoa <- st_read(.args[1]) %>%
select(msoa11cd, msoa11nm)
codes <- msoa %>% pull(msoa11cd) %>% as.character()
neighbors <- pblapply(c(codes[as.integer(runif(9, min = 1, max = msoa %>% pull(1) %>% length()))], c('E02006019', 'E02006021')), get_neighbour, msoa_data = msoa)
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
require(pbapply)
})
source('./get_neighbour.R')
if(interactive()){
.args <- c('/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbours/data/Middle_Layer_Super_Output_Areas__December_2011__Boundaries.shp',
'/Users/hamishgibbs/Documents/Covid-19/carehome_local/msoa_neighbours/output/msoa_neighbors.csv')
}else{
.args <- commandArgs(trailingOnly = T)
}
msoa <- st_read(.args[1]) %>%
select(msoa11cd, msoa11nm)
codes <- msoa %>% pull(msoa11cd) %>% as.character()
neighbors <- pblapply(c(codes[as.integer(runif(9, min = 1, max = msoa %>% pull(1) %>% length()))], c('E02006019', 'E02006021')), get_neighbour, msoa_data = msoa)
setwd('/Users/hamishgibbs/Documents/DS_MSc/python_module_5')
rmarkdown::build_site()
rmarkdown::render_site()
